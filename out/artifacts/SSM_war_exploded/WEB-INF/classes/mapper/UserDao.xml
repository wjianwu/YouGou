<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="darian.dao.UserDao">
    <resultMap id="BaseResultMap" type="darian.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="head_url" property="headUrl" jdbcType="VARCHAR"/>
        <result column="introduction" property="introduction" jdbcType="VARCHAR"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
        <result column="topic_count" property="topicCount" jdbcType="INTEGER"/>
        <result column="reply_count" property="replyCount" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="INTEGER"/>
        <result column="enable" property="enable" jdbcType="BIT"/>
        <result column="create_on" property="createOn" jdbcType="TIMESTAMP"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="darian.entity.User">
    insert into user (id, username, nickname, 
      password, email, sex, 
      head_url, introduction, signature, 
      topic_count, reply_count, amount, 
      enable, create_on)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{headUrl,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, 
      #{topicCount,jdbcType=INTEGER}, #{replyCount,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, 
      #{enable,jdbcType=BIT}, #{createOn,jdbcType=TIMESTAMP})
  </insert>
    <update id="updateByPrimaryKey" parameterType="darian.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      head_url = #{headUrl,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      topic_count = #{topicCount,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      enable = #{enable,jdbcType=BIT},
      create_on = #{createOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select id, username, nickname, password, email, sex, head_url, introduction, signature, 
    topic_count, reply_count, amount, enable, create_on
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, nickname, password, email, sex, head_url, introduction, signature, 
    topic_count, reply_count, amount, enable, create_on
    from user
  </select>
    <select id="selectByNameAndPwd" resultMap="BaseResultMap">
    select * from user
    where nickname = #{nickname} and password = #{password}
  </select>
    <update id="uploadImg">
        update user
        set head_url = #{headUrl}
        where id = #{id}
    </update>
    <update id="updatePwd">
        update user
        set password = #{nowpass}
        where id=#{id}
    </update>
    <select id="selectByEmail" parameterType="java.lang.String" resultType="java.lang.String">
        select password from user
        where email = #{email}
    </select>
</mapper>